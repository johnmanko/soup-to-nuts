spring.main.banner-mode=off

spring.application.name=springboot-hello-service

# Using this property also changes to root path of the "actuator" path.
# Therefore, it's been moved to the HelloAPI REST controller
# spring.mvc.servlet.path=/api/v1

# The following will make all beans lazily loaded.  Ie, only creates
# beans when they are needed for injection.  Otherwise, all components
# are created regardless if they are used.  This is also applied
# to @RestController component.  You should instead use the @Lazy
# annotation on the specific components you want to load lazily.
# spring.main.lazy-initialization=true;

GREETING_SUBJECT=Doc
greeting.template=What's up, %s

# MANAGEMENT
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info,mappings
management.info.env.enabled=true
info.app.name=springboot-hello-service
info.app.description=A single SpringBoot Hello World REST service
info.app.version=1.0.0

## NATIVE IMAGES
# Enable Native Image Build (Gradle or Maven configuration still needed)
spring.aot.enabled=true

# NATIVE BUILD
# Specify target options for the native image build
spring.native.build-tools.native-image-options=--enable-all-security-services,--initialize-at-build-time=com.johnmanko
# Enables debug output during the native build.
#spring.native.build-tools.debug=true
# Enables verbose logging for the native image build process.
#spring.native.build-tools.verbose=true

# DATA
#spring.datasource.url=jdbc:postgres://localhost:5432/database_1
#spring.datasource.username=${DB_USER}
#spring.datasource.password=${DB_PASS}
#spring.jpa.hibernate.ddl-auto=update #none, create-only, drop, create, create-drop, validate, update

# LOGGING
logging.level.root=WARN
# SQL logging
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

#---
spring.config.activate.on-profile=dev
GREETING_SUBJECT=Developer
greeting.template=What's up, %s
#---
spring.config.activate.on-profile=test
GREETING_SUBJECT=Tester
greeting.template=What's up, %s